{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/header/header.component.ts","webpack:///src/app/core/header/header.component.html","webpack:///src/app/core/home/home.component.ts","webpack:///src/app/core/home/home.component.html","webpack:///src/app/core/interceptors/auth.interceptor.ts","webpack:///src/app/core/interceptors/auth.service.ts","webpack:///src/app/core/interceptors/index.ts","webpack:///src/app/core/interceptors/transform-response.interceptor.ts","webpack:///src/app/core/page-not-found/page-not-found.component.ts","webpack:///src/app/core/page-not-found/page-not-found.component.html","webpack:///src/app/feature/cart/cart-list/cart-list.component.ts","webpack:///src/app/feature/cart/cart-list/cart-list.component.html","webpack:///src/app/feature/cart/cart-routing.module.ts","webpack:///src/app/feature/cart/cart.module.ts","webpack:///src/app/feature/cart/cart.service.ts","webpack:///src/app/feature/feature.module.ts","webpack:///src/app/feature/menu/menu-list/menu-list.component.ts","webpack:///src/app/feature/menu/menu-list/menu-list.component.html","webpack:///src/app/feature/menu/menu-routing.module.ts","webpack:///src/app/feature/menu/menu.module.ts","webpack:///src/app/feature/menu/menu.service.ts","webpack:///src/app/shared/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","loadChildren","m","UserModule","MenuModule","CartModule","AppRoutingModule","forRoot","imports","AppComponent","breakpointObserver","router","isSmallScreen","isMatched","observe","HandsetLandscape","HandsetPortrait","subscribe","result","matches","activateHandsetLayout","isHandsetUI","selector","templateUrl","styleUrls","AppModule","withServerTransition","appId","register","enabled","production","declarations","providers","bootstrap","CoreModule","HeaderComponent","headerTitle","loggedInUser","isMobileScreen","fillerNav","title","navigate","HomeComponent","AuthInterceptor","auth","next","authHeader","getAuthorizationToken","authReq","clone","setHeaders","Authorization","console","log","handle","AuthService","providedIn","httpInterceptorProviders","provide","useClass","multi","TransformResponseInterceptor","spinner","count","show","pipe","event","hide","PageNotFoundComponent","CartListComponent","cartService","cartList$","getCartList","CartRoutingModule","forChild","CartService","httpClient","get","FeatureModule","MenuListComponent","menuService","menuList$","getMenuList","MenuRoutingModule","MenuService","MaterialModule","environment","CI_Token","document","addEventListener","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './core/home/home.component';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home', component: HomeComponent },\n  { path: 'user', loadChildren: () => import('./feature/user/user.module').then(m => m.UserModule) },\n  { path: 'menu', loadChildren: () => import('./feature/menu/menu.module').then(m => m.MenuModule) },\n  { path: 'cart', loadChildren: () => import('./feature/cart/cart.module').then(m => m.CartModule) },\n  {\n   path: '**',\n   component: PageNotFoundComponent\n   }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n\n})\nexport class AppComponent {\n  \n  isHandsetUI: boolean;\n\n  constructor(breakpointObserver: BreakpointObserver,private router: Router){\n    const isSmallScreen = breakpointObserver.isMatched('(max-width: 599px)');\n    breakpointObserver.observe([\n      Breakpoints.HandsetLandscape,\n      Breakpoints.HandsetPortrait\n    ]).subscribe(result => {\n      if (result.matches) {\n        this.activateHandsetLayout();\n      }\n    });\n   }\n\n   activateHandsetLayout(){\n     this.isHandsetUI = true\n   }\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#fff\" type = \"line-scale-pulse-out\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>","\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HomeComponent } from './core/home/home.component';\nimport { PageNotFoundComponent } from './core/page-not-found/page-not-found.component';\nimport { CoreModule } from './core/core.module';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { FeatureModule } from './feature/feature.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { httpInterceptorProviders } from './core/interceptors';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    FormsModule,\n    LayoutModule,\n    CoreModule,\n    FeatureModule,\n    NoopAnimationsModule,\n    RouterModule,\n    HttpClientModule,\n    NgxSpinnerModule\n    /*Ngrx Store*/ ],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { HeaderComponent } from './header/header.component';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../shared/material.module';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    MaterialModule,\n    RouterModule,\n    FormsModule,\n    CommonModule\n  ],\n  exports: [HeaderComponent]\n})\nexport class CoreModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  headerTitle = 'The Dabba';\n  loggedInUser = 'admin-user';\n  isMobileScreen  = false;\n\n  fillerNav = [\n    {title: 'Home', path : '/home'},\n    {title: 'Menu', path : '/menu'},\n    {title: 'Cart', path : '/cart'}\n  ];\n\n \n  constructor(breakpointObserver:BreakpointObserver, private router: Router) {\n    this.isMobileScreen = breakpointObserver.isMatched('(max-width: 599px)');\n   }\n \n\n  toggleUser(){\n    this.loggedInUser = 'customer-user'\n  }\n\n  loadModule(){\n    this.router.navigate(['/' + this.loggedInUser]);\n  }\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n}\n","<div class=\"example-container\"  >\n  <mat-toolbar color=\"primary\" class=\"example-toolbar\">\n    <ng-container   *ngIf=\"isMobileScreen\">\n      <div class=\"w-25 \">\n        <!-- #####inside toolbar ##### -->\n        <mat-icon class=\"md-36\" mat-raised-button (click)=\"snav.toggle()\">menu</mat-icon>\n        <!-- #####inside toolbar ##### -->\n      </div>\n      </ng-container>\n    <div [class]=\"isMobileScreen ? 'w-75' : 'w-90'\">\n    <h1 class=\"example-app-name\" [routerLink]=\"['/home']\">Restaurant App</h1>\n    </div>\n    <div class=\"w-10 \" *ngIf=\"!isMobileScreen\">\n      <mat-icon [routerLink]=\"['/cart']\" routerLinkActive=\"router-link-active\"  class=\"material-icons md-24\" matBadge=\"4\" matBadgeColor=\"accent\">shopping_cart</mat-icon>\n      <mat-icon [routerLink]=\"['/menu']\" class=\"material-icons md-24\">menu_book</mat-icon>\n      <mat-icon [routerLink]=\"['/user']\" class=\"material-icons md-24\">account_circle</mat-icon>\n    </div>\n  </mat-toolbar>\n\n</div>\n<!-- For mobile view -->\n\n<mat-sidenav-container class=\"example-sidenav-container\" [style.height]=\"isMobileScreen ? '100% ': 'auto' \">\n  <mat-sidenav #snav [mode]=\"isMobileScreen ? 'over' : 'side' \" [style.width.%]=\"100\" >\n      <mat-nav-list>\n        <mat-list-item  *ngFor=\"let item of fillerNav\" >\n          <a (click)=\"snav.toggle()\" [routerLink]=\"[item.path]\" >{{item.title}}</a>\n        </mat-list-item>\n      </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  isMobileScreen  = false;\n  constructor(breakpointObserver:BreakpointObserver) {\n    this.isMobileScreen = breakpointObserver.isMatched('(max-width: 599px)');\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"../../../assets/images/Logo.jpg\" [style.width.vw]=\"90\">\r\n<!-- <button routerLink=\"/admin-user\" >Admin</button>\r\n<button routerLink=\"/customer-user\" >Customer</button> -->\r\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authHeader = this.auth.getAuthorizationToken();\n    const authReq = req.clone({\n      setHeaders: { Authorization: authHeader, 'Content-Type': 'application/json' }\n    });\n\n    console.log(`HTTP: Adding headers`);\n    // Pass on the cloned request instead of the original request.\n    return next.handle(authReq);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  getAuthorizationToken() {\n    return [\n      'Basic d2VudHdvcnRobWFuOkNoYW5nZV9tZQ=='\n    ];\n  }\n}\n","import { TransformResponseInterceptor } from './transform-response.interceptor';\r\nimport { AuthInterceptor } from './auth.interceptor';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nexport * from './auth.interceptor';\r\nexport * from './transform-response.interceptor';\r\n\r\n\r\nexport const httpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: TransformResponseInterceptor, multi: true },\r\n  ];","import {\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpEvent,\n  HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map,finalize } from 'rxjs/operators';\nimport { Injectable } from \"@angular/core\";\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable()\nexport class TransformResponseInterceptor implements HttpInterceptor {\n  count = 0;\n  constructor(private spinner: NgxSpinnerService) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.spinner.show()\n    this.count++;\n    return next.handle(req).pipe(\n      map(event => {\n        if (event instanceof HttpResponse) {\n          console.log('response transformed')\n            return event.clone();\n        }\n      }),finalize(\n        () => {\n          this.count--;\n          if ( this.count == 0 ) this.spinner.hide ()\n        }\n      )\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-cart-list',\n  templateUrl: './cart-list.component.html',\n  styleUrls: ['./cart-list.component.scss']\n})\nexport class CartListComponent implements OnInit {\n  cartList$ :Observable<any> ;\n\n  constructor(private cartService: CartService) { \n   \n  }\n\n  ngOnInit(): void {\n    this.cartList$ = this.cartService.getCartList()\n  }\n\n}\n","<h4>Your Cart contains</h4>\n<div class=\"pl-5\">\n<mat-card class=\"example-card \" style=\"float: left;\" *ngFor=\"let item of cartList$ | async\" >\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title class=\"card-title\">{{item.name}}</mat-card-title>\n    <mat-card-subtitle>Price : {{item.id}}</mat-card-subtitle>\n  </mat-card-header>\n  <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Cart Item\">\n  <mat-card-content>\n    <p>\n      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.      \n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button class=\"btn btn-sm btn-primary mr-2\" >LIKE</button>\n    <button class=\"btn btn-sm btn-info\">SHARE</button>\n  </mat-card-actions>\n</mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CartListComponent } from './cart-list/cart-list.component';\n\n\nconst routes: Routes = [\n{path: '', component: CartListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CartRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CartRoutingModule } from './cart-routing.module';\nimport { CartListComponent } from './cart-list/cart-list.component';\nimport { MaterialModule } from 'src/app/shared/material.module';\nimport { CommonModule } from '@angular/common';\nimport { CartService } from './cart.service';\n\n\n\n@NgModule({\n  declarations: [CartListComponent],\n  imports: [\n    CartRoutingModule,\n    MaterialModule,\n    CommonModule\n  ],\n  providers: [CartService]\n})\nexport class CartModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class CartService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getCartList(): Observable<any> {\n    return this.httpClient.get('https://jsonplaceholder.typicode.com/users');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MaterialModule } from '../shared/material.module';\nimport { CartModule } from './cart/cart.module';\nimport { MenuModule } from './menu/menu.module';\n\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MaterialModule,\n    CartModule,\n    MenuModule,\n  ],\n})\nexport class FeatureModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MenuService } from '../menu.service';\n\n@Component({\n  selector: 'app-menu-list',\n  templateUrl: './menu-list.component.html',\n  styleUrls: ['./menu-list.component.scss']\n})\nexport class MenuListComponent implements OnInit {\n\n  menuList$: Observable<any>\n  constructor( private menuService: MenuService) { }\n\n  ngOnInit(): void {\n    this.menuList$ = this.menuService.getMenuList()\n  }\n\n}\n","<mat-card>Menu items</mat-card>\n\n<div class=\"pl-5 pt-2\">\n<mat-card class=\"example-card \" style=\"float: left;\" *ngFor=\"let item of menuList$ | async\" >\n  <mat-card-header>\n    <mat-card-title class=\"card-title\">{{item.name}}</mat-card-title>\n  </mat-card-header>\n  <img mat-card-image src=\"../../../../assets/images/pizza.jpg\" alt=\"Cart Item\">\n  <mat-card-content>\n    <p>\n      Delicious pizza with.      \n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button class=\"btn btn-sm btn-primary mr-2\" >LIKE</button>\n    <button class=\"btn btn-sm btn-info\">SHARE</button>\n  </mat-card-actions>\n</mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MenuListComponent } from './menu-list/menu-list.component';\n\n\nconst routes: Routes = [\n  { path: '', component: MenuListComponent}\n  // { path: '/:id', component: }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MenuRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { MenuListComponent } from './menu-list/menu-list.component';\nimport {MenuRoutingModule  } from './menu-routing.module';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MaterialModule } from 'src/app/shared/material.module';\nimport { MenuService } from './menu.service';\n\n\n@NgModule({\n  declarations: [MenuListComponent],\n  imports: [\n    MenuRoutingModule,\n    MaterialModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  providers: [MenuService]\n})\nexport class MenuModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class MenuService {\n \n  constructor(private httpClient: HttpClient) { }\n\n  getMenuList(): Observable<any> {\n    return this.httpClient.get('https://jsonplaceholder.typicode.com/posts');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatBadgeModule} from '@angular/material/badge';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatToolbarModule,\n    MatGridListModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatListModule,\n    MatBadgeModule\n  ],\n  exports:[\n    MatToolbarModule,\n    MatGridListModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatBadgeModule\n  ]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  CI_Token:'1//0g8nMdYYKS-uOCgYIARAAGBASNwF-L9Irx3j6BYp28AJ2SRRdVFwupi5MQRfAlmTBvs_yQLKe8b7cMUhwMPANrgGbUx5c1s37sbg'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nenableProdMode();\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n\n"]}